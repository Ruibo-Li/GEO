
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa5\xfc\xbe\'\xf8\xf4l"\xac\xc2U\x8c\xcd\xd3=\xab'
    
_lr_action_items = {'K_DOUBLE':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,13,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'NEG':([23,24,28,34,44,55,58,60,],[28,28,28,28,28,28,28,28,]),'K_TRUE':([23,24,28,34,44,45,46,47,48,49,50,51,55,58,60,],[30,30,30,30,30,-52,-50,30,-53,-51,-54,-55,30,30,30,]),'K_STRING':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,20,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'NEQ':([26,27,30,31,33,36,38,39,41,52,54,59,],[-41,51,-40,-37,-36,-35,-39,-38,-8,51,-36,-7,]),'GEQ':([26,27,30,31,33,36,38,39,41,52,54,59,],[-41,45,-40,-37,-36,-35,-39,-38,-8,45,-36,-7,]),'K_LIST':([0,1,3,5,6,8,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,9,-4,-5,-6,-3,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'EQ':([26,27,30,31,33,36,38,39,41,52,54,59,],[-41,50,-40,-37,-36,-35,-39,-38,-8,50,-36,-7,]),'K_SET':([0,1,3,5,6,8,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,4,-4,-5,-6,-3,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'PLUS':([32,33,41,59,64,65,66,],[56,-32,-8,-7,-34,-33,-31,]),'LT':([26,27,30,31,33,36,38,39,41,52,54,59,],[-41,49,-40,-37,-36,-35,-39,-38,-8,49,-36,-7,]),'COMMA':([26,27,29,30,31,32,33,35,36,37,38,39,41,42,43,52,53,54,59,62,63,64,65,66,68,69,70,],[-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-8,60,-10,-48,-49,-36,-7,-47,-44,-34,-33,-31,-46,-42,-9,]),'INTEGER':([23,24,28,34,44,45,46,47,48,49,50,51,55,58,60,],[31,31,31,31,31,-52,-50,31,-53,-51,-54,-55,31,31,31,]),'K_TRIANGLE':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,14,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'ASSIGN':([11,25,],[23,44,]),'K_CIRCLE':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,22,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'$end':([0,1,2,3,5,6,8,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-1,0,-4,-5,-6,-3,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'GT':([26,27,30,31,33,36,38,39,41,52,54,59,],[-41,46,-40,-37,-36,-35,-39,-38,-8,46,-36,-7,]),'STRING':([23,24,28,34,44,45,46,47,48,49,50,51,55,56,58,60,],[33,33,54,54,33,-52,-50,54,-53,-51,-54,-55,54,64,54,33,]),'K_SHAPE':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,16,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'K_TEXT':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,17,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'K_INT':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,19,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'LPAREN':([11,23,24,28,34,36,44,55,58,60,67,],[24,34,34,34,34,24,34,34,34,34,24,]),'RPAREN':([24,26,27,29,30,31,32,33,35,36,37,38,39,41,42,43,52,53,54,57,59,62,63,64,65,66,68,69,70,],[41,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-8,59,-10,-48,-49,-36,68,-7,-47,-44,-34,-33,-31,-46,-42,-9,]),'K_DICT':([0,1,3,5,6,8,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,7,-4,-5,-6,-3,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'ID':([0,1,3,5,6,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,68,69,],[-2,11,-4,-5,-6,-3,-21,-19,-24,25,-23,-27,-25,-18,-20,-22,-26,36,36,-11,-41,-29,36,-43,-40,-37,-28,-32,36,-45,-35,-30,-39,-38,-13,-8,36,-52,-50,36,-53,-51,-54,-55,-48,-49,-36,36,67,36,-7,36,-12,-47,-44,-34,-33,-31,-46,-42,]),'AND':([26,27,29,30,31,33,35,36,38,39,41,52,53,54,59,62,63,68,69,],[-41,-48,55,-40,-37,-36,-45,-35,-39,-38,-8,-48,-49,-36,-7,-47,-44,-46,55,]),'K_BOOL':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,12,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'DOUBLE':([23,24,28,34,44,45,46,47,48,49,50,51,55,58,60,],[38,38,38,38,38,-52,-50,38,-53,-51,-54,-55,38,38,38,]),'LEQ':([26,27,30,31,33,36,38,39,41,52,54,59,],[-41,48,-40,-37,-36,-35,-39,-38,-8,48,-36,-7,]),'K_RECTANGLE':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,18,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'K_WINDOW':([0,1,3,4,5,6,7,8,9,10,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,52,53,54,59,61,62,63,64,65,66,68,69,],[-2,-14,-4,-17,-5,-6,-16,-3,-15,21,-11,-41,-29,-43,-40,-37,-28,-32,-45,-35,-30,-39,-38,-13,-8,-48,-49,-36,-7,-12,-47,-44,-34,-33,-31,-46,-42,]),'K_FALSE':([23,24,28,34,44,45,46,47,48,49,50,51,55,58,60,],[26,26,26,26,26,-52,-50,26,-53,-51,-54,-55,26,26,26,]),'OR':([26,27,29,30,31,33,35,36,37,38,39,41,52,53,54,57,59,62,63,68,69,],[-41,-48,-43,-40,-37,-36,-45,-35,58,-39,-38,-8,-48,-49,-36,58,-7,-47,-44,-46,-42,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_expression':([23,24,44,60,],[32,32,32,32,]),'string_term':([56,],[66,]),'parameter_list':([24,],[42,]),'unary_expression':([23,24,28,34,44,47,55,58,60,],[27,27,52,52,27,62,52,52,27,]),'compound_statement':([1,],[3,]),'expression':([23,24,44,60,],[40,43,61,70,]),'boolean_expression':([23,24,34,44,60,],[37,37,57,37,37,]),'boolean_term':([23,24,34,44,58,60,],[29,29,29,29,69,29,]),'function_call_statement':([1,23,24,28,34,44,47,55,56,58,60,],[5,39,39,39,39,39,39,39,65,39,39,]),'comparator':([27,52,],[47,47,]),'boolean_factor':([23,24,28,34,44,55,58,60,],[35,35,53,35,35,63,35,35,]),'program':([0,],[2,]),'statement':([1,],[8,]),'statement_list':([0,],[1,]),'pre_type_modifier':([1,],[10,]),'type':([10,],[15,]),'variable_declaration':([1,],[6,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lex_yacc.py',126),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list','lex_yacc.py',134),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lex_yacc.py',135),
  ('statement -> compound_statement','statement',1,'p_statement','lex_yacc.py',145),
  ('compound_statement -> function_call_statement','compound_statement',1,'p_compound_statement','lex_yacc.py',152),
  ('compound_statement -> variable_declaration','compound_statement',1,'p_compound_statement','lex_yacc.py',153),
  ('function_call_statement -> ID LPAREN parameter_list RPAREN','function_call_statement',4,'p_function_call_statement','lex_yacc.py',159),
  ('function_call_statement -> ID LPAREN RPAREN','function_call_statement',3,'p_function_call_statement','lex_yacc.py',160),
  ('parameter_list -> parameter_list COMMA expression','parameter_list',3,'p_parameter_list','lex_yacc.py',170),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','lex_yacc.py',171),
  ('variable_declaration -> pre_type_modifier type ID','variable_declaration',3,'p_variable_declaration','lex_yacc.py',180),
  ('variable_declaration -> pre_type_modifier type ID ASSIGN expression','variable_declaration',5,'p_variable_declaration','lex_yacc.py',181),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','lex_yacc.py',182),
  ('pre_type_modifier -> <empty>','pre_type_modifier',0,'p_pre_type_modifier','lex_yacc.py',203),
  ('pre_type_modifier -> K_LIST','pre_type_modifier',1,'p_pre_type_modifier','lex_yacc.py',204),
  ('pre_type_modifier -> K_DICT','pre_type_modifier',1,'p_pre_type_modifier','lex_yacc.py',205),
  ('pre_type_modifier -> K_SET','pre_type_modifier',1,'p_pre_type_modifier','lex_yacc.py',206),
  ('type -> K_INT','type',1,'p_type','lex_yacc.py',215),
  ('type -> K_DOUBLE','type',1,'p_type','lex_yacc.py',216),
  ('type -> K_STRING','type',1,'p_type','lex_yacc.py',217),
  ('type -> K_BOOL','type',1,'p_type','lex_yacc.py',218),
  ('type -> K_WINDOW','type',1,'p_type','lex_yacc.py',219),
  ('type -> K_SHAPE','type',1,'p_type','lex_yacc.py',220),
  ('type -> K_TRIANGLE','type',1,'p_type','lex_yacc.py',221),
  ('type -> K_RECTANGLE','type',1,'p_type','lex_yacc.py',222),
  ('type -> K_CIRCLE','type',1,'p_type','lex_yacc.py',223),
  ('type -> K_TEXT','type',1,'p_type','lex_yacc.py',224),
  ('expression -> string_expression','expression',1,'p_expression','lex_yacc.py',231),
  ('expression -> unary_expression','expression',1,'p_expression','lex_yacc.py',232),
  ('expression -> boolean_expression','expression',1,'p_expression','lex_yacc.py',233),
  ('string_expression -> string_expression PLUS string_term','string_expression',3,'p_string_expression','lex_yacc.py',239),
  ('string_expression -> STRING','string_expression',1,'p_string_expression','lex_yacc.py',240),
  ('string_term -> function_call_statement','string_term',1,'p_string_term','lex_yacc.py',250),
  ('string_term -> STRING','string_term',1,'p_string_term','lex_yacc.py',251),
  ('unary_expression -> ID','unary_expression',1,'p_unary_expression','lex_yacc.py',258),
  ('unary_expression -> STRING','unary_expression',1,'p_unary_expression','lex_yacc.py',259),
  ('unary_expression -> INTEGER','unary_expression',1,'p_unary_expression','lex_yacc.py',260),
  ('unary_expression -> function_call_statement','unary_expression',1,'p_unary_expression','lex_yacc.py',261),
  ('unary_expression -> DOUBLE','unary_expression',1,'p_unary_expression','lex_yacc.py',262),
  ('unary_expression -> K_TRUE','unary_expression',1,'p_unary_expression','lex_yacc.py',263),
  ('unary_expression -> K_FALSE','unary_expression',1,'p_unary_expression','lex_yacc.py',264),
  ('boolean_expression -> boolean_expression OR boolean_term','boolean_expression',3,'p_boolean_expression','lex_yacc.py',275),
  ('boolean_expression -> boolean_term','boolean_expression',1,'p_boolean_expression','lex_yacc.py',276),
  ('boolean_term -> boolean_term AND boolean_factor','boolean_term',3,'p_boolean_term','lex_yacc.py',285),
  ('boolean_term -> boolean_factor','boolean_term',1,'p_boolean_term','lex_yacc.py',286),
  ('boolean_factor -> LPAREN boolean_expression RPAREN','boolean_factor',3,'p_boolean_factor','lex_yacc.py',295),
  ('boolean_factor -> unary_expression comparator unary_expression','boolean_factor',3,'p_boolean_factor','lex_yacc.py',296),
  ('boolean_factor -> unary_expression','boolean_factor',1,'p_boolean_factor','lex_yacc.py',297),
  ('boolean_factor -> NEG boolean_factor','boolean_factor',2,'p_boolean_factor','lex_yacc.py',298),
  ('comparator -> GT','comparator',1,'p_comparator','lex_yacc.py',313),
  ('comparator -> LT','comparator',1,'p_comparator','lex_yacc.py',314),
  ('comparator -> GEQ','comparator',1,'p_comparator','lex_yacc.py',315),
  ('comparator -> LEQ','comparator',1,'p_comparator','lex_yacc.py',316),
  ('comparator -> EQ','comparator',1,'p_comparator','lex_yacc.py',317),
  ('comparator -> NEQ','comparator',1,'p_comparator','lex_yacc.py',318),
]
